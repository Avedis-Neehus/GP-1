
l = Q_('89.15cm-9.78cm').pm(0.01)#Q_('80cm').pm(0.01)#
T = Q_('30min+27s').to_base_units().pm(0.5)/1000
r = Q_('(9.78-5.85)cm/2').pm(0.01)# Q_('(4)cm/2')#
l = l+r
ol = Q_('0.0012g/cm**3')
ok = Q_('8.4g/cm**3')
mu = 1/4*np.pi*l*Q_('0.08cm')**2*Q_('7.7g/cm**3')
m = 4/3 * np.pi*r**3*ok
phi = Q_('0.074')

tim = [2,3,3,3,4,4]
tim = (3*60+np.array(tim))/100
phi0 = [5,8,11,14,18,21]
phi1 = [4,7,9.5,12.5,15,17.8]
phin = np.pi/180 *((np.array(phi0)+np.array(phi0))/2)


def func(phi,T0):
    return T0*(1+phi**2 /16)
   #return T0* (1+a*phi+b*phi**2+c*phi**3)
popt,pcov = curve_fit(func,phin,tim,absolute_sigma = 1, sigma = [0.005]*len(phin))
plt.errorbar(phin,tim,fmt = 'o', yerr = 0.005, xerr = 0.4*np.pi/180) 
phin = np.linspace(0,0.40)
plt.plot(phin,func(phin,*popt), color = 'green')
plt.plot(phin, func(phin, popt[0]+pcov[0]**0.5),'g--', alpha = 0.5)
plt.plot(phin, func(phin, popt[0]-pcov[0]**0.5), 'g--', alpha = 0.5)
plt.fill_between(phin, func(phin, popt[0]+pcov[0]**0.5), func(phin, popt[0]-pcov[0]**0.5), facecolor="green", alpha=0.15)
plt.xlabel(r'Winkel $\phi_m$ in Bogenmaﬂ')
plt.ylabel('Periodendauer T in s')


#@listify
def mprint(q):  
    print('{:Lx}'.format(q) )
  
 #((4*np.pi**2*l)/T**2 )*   
@techutil()
def g(l = l,T =T,r=r,ol=ol,ok=ok,mu=mu,m=m,phi=phi):
    return (1+2*(r/l)**2/5+ol/ok-mu/(6*m)+phi**2/8)

@techutil()
def g2(l = l,T =T):
    return 4*np.pi**2*l/T**2